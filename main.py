#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import logging
from flask import Flask, request, jsonify
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not BOT_TOKEN:
    logger.error("TELEGRAM_BOT_TOKEN not found!")
    exit(1)

BOT_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"
logger.info(f"Bot initialized: {BOT_TOKEN[:10]}...")

@app.route('/')
def health():
    return "üá®üá≥ BuyerChina Bot is running on Railway!", 200

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.get_json()
        logger.info(f"Received update: {data}")
        
        if 'message' in data:
            message = data['message']
            chat_id = message['chat']['id']
            user_name = message.get('from', {}).get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            
            if 'text' in message and message['text'] == '/start':
                welcome_text = (
                    f"üá®üá≥ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BuyerChina, {user_name}!*\n\n"
                    "–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∫—É–ø–æ–∫ –≤ –ö–∏—Ç–∞–µ.\n"
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤."
                )
                send_message(chat_id, welcome_text)
            elif 'photo' in message:
                response_text = (
                    f"üì∏ *–ü–æ–ª—É—á–∏–ª —Ñ–æ—Ç–æ –æ—Ç {user_name}!*\n\n"
                    "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...\n"
                    "üá®üá≥ –ò—â—É –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –ö–∏—Ç–∞–µ...\n"
                    "üí∞ –°—Ä–∞–≤–Ω–∏–≤–∞—é —Ü–µ–Ω—ã —É —Ä–∞–∑–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...\n\n"
                    "*–ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:*\n"
                    "üè≠ –ü–æ—Å—Ç–∞–≤—â–∏–∫ 1: Guangzhou Factory - $12.50\n"
                    "üè≠ –ü–æ—Å—Ç–∞–≤—â–∏–∫ 2: Shenzhen Manufacturer - $11.80\n"
                    "üè≠ –ü–æ—Å—Ç–∞–≤—â–∏–∫ 3: Yiwu Supplier - $13.20\n\n"
                    "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: Shenzhen Manufacturer (–ª—É—á—à–∞—è —Ü–µ–Ω–∞)"
                )
                send_message(chat_id, response_text)
            elif 'text' in message:
                text = message['text']
                response_text = (
                    f"üìù *–ü–æ–ª—É—á–∏–ª –∑–∞–ø—Ä–æ—Å:* {text}\n\n"
                    "üîç –ò—â—É —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑–µ –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...\n"
                    "üí∞ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ...\n\n"
                    "*–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:*\n"
                    "üè≠ Alibaba Supplier A - $8.90 (MOQ: 100)\n"
                    "üè≠ Made-in-China Supplier B - $9.50 (MOQ: 50)\n"
                    "üè≠ DHgate Supplier C - $12.00 (MOQ: 1)\n\n"
                    "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: Supplier A (–ª—É—á—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ)"
                )
                send_message(chat_id, response_text)
        
        return "OK", 200
    except Exception as e:
        logger.error(f"Webhook error: {e}")
        return "Error", 500

def send_message(chat_id, text):
    try:
        url = f"{BOT_URL}/sendMessage"
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'Markdown'
        }
        response = requests.post(url, json=data, timeout=10)
        logger.info(f"Message sent to {chat_id}: {response.status_code}")
        return response.json()
    except Exception as e:
        logger.error(f"Send message error: {e}")

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Railway"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º URL –æ—Ç Railway
        railway_url = os.getenv('RAILWAY_PUBLIC_DOMAIN')
        if railway_url:
            webhook_url = f"https://{railway_url}/webhook"
        else:
            # Fallback URL - –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL
            webhook_url = f"https://web-production-ea35.up.railway.app/webhook"
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
        delete_url = f"{BOT_URL}/deleteWebhook"
        requests.post(delete_url, timeout=10)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
        set_url = f"{BOT_URL}/setWebhook"
        data = {'url': webhook_url}
        response = requests.post(set_url, json=data, timeout=10)
        result = response.json()
        
        if result.get('ok'):
            logger.info(f"‚úÖ Webhook set: {webhook_url}")
            return True
        else:
            logger.error(f"‚ùå Webhook failed: {result}")
            return False
            
    except Exception as e:
        logger.error(f"Webhook setup error: {e}")
        return False

@app.route('/set_webhook')
def manual_webhook():
    """–†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ webhook"""
    if setup_webhook():
        return "‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    else:
        return "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook"

@app.route('/webhook_info')
def webhook_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook"""
    try:
        url = f"{BOT_URL}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        result = response.json()
        return result
    except Exception as e:
        return {"error": str(e)}

if __name__ == '__main__':
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    setup_webhook()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    port = int(os.getenv('PORT', 5000))
    logger.info(f"üöÄ Starting server on port {port}")
    app.run(host='0.0.0.0', port=port, debug=False)
